// Java import required because we are using Java classes below
import java.time.LocalDateTime

// Groovy code
println "Hello, World!"
// Core Java classes mixed in with Groovy code
System.out.println "Hello again! The current time is now: " + LocalDateTime.now() + "."

// Inline Groovy code in the build script
// Note that the function call appears BEFORE the function declaration. Not a problem.
sayHelloWorld()
void sayHelloWorld() {
	println "Hello, World! (for the bazillionth time)"
}

println 33 + " doubled is " + doubleMe(33)
int doubleMe(int n) {
	// these expressions are just ignored
	111
	222
	// value of last expression in function is returned
	n * 2
}

def s1 = "a Groovy string"
def s2 = 'also a Groovy string'
def s3 = """
	A
	string
	on
	multiple
	lines
"""
println s1
println s2
println s3

// String interpolation
println "The value of s1 is [$s1]"
def someInt = 123
println "If I double the value $someInt I get ${doubleMe(someInt)}."

// Groovy class declaration
class Person {
	String name
	Integer age
	Person (name, age) {
		this.name = name
		this.age = age
	}
}

// Declaring an instance
def p1 = new Person("Fred", 35)
// Groovy gives you getters and setters for free
p1.age = 69
println "name: ${p1.name} | age: ${p1.age}"

// Using Map
Map m = new HashMap()
m.fred = p1
println m.fred.name

// Closures (another name for lambdas)
def emptyClosure = { }
println emptyClosure
def helloClosures = {
	"Hello, Closures?"
}
println helloClosures()
def echoItWithEmphasis = { s -> s + "!" }
println echoItWithEmphasis("plop")
def typedEchoItWithEmphasis = { String s -> s + "!" }
println typedEchoItWithEmphasis("plink")
def conciseEchoItWithEmphasis = { it + "!" }
println conciseEchoItWithEmphasis("BLAM")
// 'Closure' is a type in Groovy
Closure<String> myClosure = conciseEchoItWithEmphasis
println myClosure("POW")

// Passing a closure as a function parameter
def anotherClosure = { 42 }
def someFunctionThatNeedsClosure(Closure<Number> closure) {
	closure() * 2
}
println someFunctionThatNeedsClosure(anotherClosure)
println someFunctionThatNeedsClosure { 11 }



// This was added by IntelliJ when the project skeleton was created
group 'com.jimtough'
